
state 0
	$accept: .statements $end 
	statements: .    (1)

	IDENT  shift 6
	NUMBER  shift 5
	VAR  shift 4
	-  shift 7
	(  shift 8
	.  reduce 1 (src line 36)

	statements  goto 1
	statement  goto 2
	expr  goto 3

state 1
	$accept:  statements.$end 

	$end  accept
	.  error


state 2
	statements:  statement.statements 
	statements: .    (1)

	IDENT  shift 6
	NUMBER  shift 5
	VAR  shift 4
	-  shift 7
	(  shift 8
	.  reduce 1 (src line 36)

	statements  goto 9
	statement  goto 2
	expr  goto 3

state 3
	statement:  expr.; 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 

	+  shift 11
	-  shift 12
	*  shift 13
	/  shift 14
	%  shift 15
	;  shift 10
	.  error


state 4
	statement:  VAR.IDENT = expr ; 

	IDENT  shift 16
	.  error


state 5
	expr:  NUMBER.    (5)

	.  reduce 5 (src line 62)


state 6
	expr:  IDENT.    (6)

	.  reduce 6 (src line 66)


state 7
	expr:  -.expr 

	IDENT  shift 6
	NUMBER  shift 5
	-  shift 7
	(  shift 8
	.  error

	expr  goto 17

state 8
	expr:  (.expr ) 

	IDENT  shift 6
	NUMBER  shift 5
	-  shift 7
	(  shift 8
	.  error

	expr  goto 18

state 9
	statements:  statement statements.    (2)

	.  reduce 2 (src line 44)


state 10
	statement:  expr ;.    (3)

	.  reduce 3 (src line 52)


state 11
	expr:  expr +.expr 

	IDENT  shift 6
	NUMBER  shift 5
	-  shift 7
	(  shift 8
	.  error

	expr  goto 19

state 12
	expr:  expr -.expr 

	IDENT  shift 6
	NUMBER  shift 5
	-  shift 7
	(  shift 8
	.  error

	expr  goto 20

state 13
	expr:  expr *.expr 

	IDENT  shift 6
	NUMBER  shift 5
	-  shift 7
	(  shift 8
	.  error

	expr  goto 21

state 14
	expr:  expr /.expr 

	IDENT  shift 6
	NUMBER  shift 5
	-  shift 7
	(  shift 8
	.  error

	expr  goto 22

state 15
	expr:  expr %.expr 

	IDENT  shift 6
	NUMBER  shift 5
	-  shift 7
	(  shift 8
	.  error

	expr  goto 23

state 16
	statement:  VAR IDENT.= expr ; 

	=  shift 24
	.  error


state 17
	expr:  - expr.    (7)
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 

	.  reduce 7 (src line 70)


state 18
	expr:  ( expr.) 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 

	+  shift 11
	-  shift 12
	*  shift 13
	/  shift 14
	%  shift 15
	)  shift 25
	.  error


state 19
	expr:  expr.+ expr 
	expr:  expr + expr.    (9)
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 

	*  shift 13
	/  shift 14
	%  shift 15
	.  reduce 9 (src line 78)


state 20
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr - expr.    (10)
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 

	*  shift 13
	/  shift 14
	%  shift 15
	.  reduce 10 (src line 80)


state 21
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr * expr.    (11)
	expr:  expr./ expr 
	expr:  expr.% expr 

	.  reduce 11 (src line 82)


state 22
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr / expr.    (12)
	expr:  expr.% expr 

	.  reduce 12 (src line 84)


state 23
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 
	expr:  expr % expr.    (13)

	.  reduce 13 (src line 86)


state 24
	statement:  VAR IDENT =.expr ; 

	IDENT  shift 6
	NUMBER  shift 5
	-  shift 7
	(  shift 8
	.  error

	expr  goto 26

state 25
	expr:  ( expr ).    (8)

	.  reduce 8 (src line 74)


state 26
	statement:  VAR IDENT = expr.; 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr.% expr 

	+  shift 11
	-  shift 12
	*  shift 13
	/  shift 14
	%  shift 15
	;  shift 27
	.  error


state 27
	statement:  VAR IDENT = expr ;.    (4)

	.  reduce 4 (src line 57)


16 terminals, 4 nonterminals
14 grammar rules, 28/2000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
53 working sets used
memory: parser 13/30000
17 extra closures
68 shift entries, 1 exceptions
12 goto entries
2 entries saved by goto default
Optimizer space used: output 50/30000
50 table entries, 6 zero
maximum spread: 16, maximum offset: 24
